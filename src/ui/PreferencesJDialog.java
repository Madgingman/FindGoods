/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;

import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.HashMap;
import java.util.Map;
import javax.swing.JOptionPane;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.transform.TransformerException;
import org.xml.sax.SAXException;
import service.XMLBuilder;
import service.XMLReader;

/**
 *
 * @author M
 */
public class PreferencesJDialog extends javax.swing.JDialog {
    
    private static final String SETTINGS_FILENAME = "src\\settings.xml";

    private StoresJPanel storesPanel;
    private UsersJPanel usersPanel;
    
    /**
     * Creates new form PreferencesJDialog
     */
    public PreferencesJDialog(java.awt.Frame parent, boolean isAdmin, boolean modal) {
	super(parent, "Настройки", modal);
	initComponents();
	this.setLocationRelativeTo(parent);
	
	Map<String, Boolean> stores = new HashMap<>();
	try {
	    stores = loadSettings();
	} catch (ParserConfigurationException | IOException | SAXException ex) {
	    JOptionPane.showMessageDialog(null,
		    "Can't load store's settings: " + ex.getLocalizedMessage(),
		    "Error", JOptionPane.ERROR_MESSAGE, null);
	}
	
	storesPanel = new StoresJPanel(this, stores, isAdmin);
	this.mainTPane.addTab("Stores", storesPanel);
	
	if (isAdmin) {
	    usersPanel = new UsersJPanel(this);
	    this.mainTPane.addTab("Users", usersPanel);
	}
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        okButton = new javax.swing.JButton();
        mainTPane = new javax.swing.JTabbedPane();
        cancelButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Настройки");
        setMinimumSize(new java.awt.Dimension(682, 350));
        setPreferredSize(new java.awt.Dimension(682, 350));
        setResizable(false);

        okButton.setText("OK");
        okButton.setMaximumSize(new java.awt.Dimension(75, 25));
        okButton.setMinimumSize(new java.awt.Dimension(75, 25));
        okButton.setPreferredSize(new java.awt.Dimension(75, 25));
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });

        cancelButton.setText("Cancel");
        cancelButton.setMaximumSize(new java.awt.Dimension(75, 25));
        cancelButton.setMinimumSize(new java.awt.Dimension(75, 25));
        cancelButton.setPreferredSize(new java.awt.Dimension(75, 25));
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 506, Short.MAX_VALUE)
                        .addComponent(okButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(mainTPane))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(mainTPane, javax.swing.GroupLayout.DEFAULT_SIZE, 297, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(okButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        this.dispose();
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
	saveSettings();	
	this.dispose();
    }//GEN-LAST:event_okButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelButton;
    private javax.swing.JTabbedPane mainTPane;
    private javax.swing.JButton okButton;
    // End of variables declaration//GEN-END:variables

    private Map<String, Boolean> loadSettings() throws ParserConfigurationException, IOException, SAXException {
	return XMLReader.loadSettings(SETTINGS_FILENAME);
    }

    private void saveSettings() {
	try {
	    XMLBuilder.saveStoreProperties(storesPanel.stores, SETTINGS_FILENAME);
	} catch (ParserConfigurationException | TransformerException | FileNotFoundException ex) {
	    JOptionPane.showMessageDialog(null, "Error while saving settings. Settings are not saved.",
		    "Error", JOptionPane.ERROR_MESSAGE, null);
	}
    }

    public Map<String, Boolean> getStores() {
	return this.storesPanel.stores;
    }
}
